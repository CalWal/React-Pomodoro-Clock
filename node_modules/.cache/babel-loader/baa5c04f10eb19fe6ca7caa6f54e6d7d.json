{"ast":null,"code":"import _defineProperty from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/src/Pomodoro.js\";\nimport React from \"react\";\n\nvar moment = require(\"moment\");\n\nmoment().format();\n\nvar SetTimer = function SetTimer(_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      handleClick = _ref.handleClick;\n  return React.createElement(\"div\", {\n    className: \"SetTimer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"\".concat(type, \"-label\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"SetTimer-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"\".concat(type, \"-length\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, value), React.createElement(\"button\", {\n    className: \"increment\",\n    id: \"\".concat(type, \"-increment\"),\n    onClick: function onClick() {\n      return handleClick(true, \"\".concat(type, \"Value\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    className: \"decrement\",\n    id: \"\".concat(type, \"-decrement\"),\n    onClick: function onClick() {\n      return handleClick(false, \"\".concat(type, \"Value\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"-\")));\n};\n\nvar Timer = function Timer(_ref2) {\n  var mode = _ref2.mode,\n      time = _ref2.time;\n  return React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"timer-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, mode === \"session\" ? \"Session \" : \"Break \"), React.createElement(\"h1\", {\n    id: \"time-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, time));\n};\n\nvar Controls = function Controls(_ref3) {\n  var active = _ref3.active,\n      handleReset = _ref3.handleReset,\n      handlePlayPause = _ref3.handlePlayPause;\n  return React.createElement(\"div\", {\n    className: \"Controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"startStop\",\n    id: \"start_stop\",\n    onClick: handlePlayPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, active ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u275A\\u275A\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u25BA\")), React.createElement(\"button\", {\n    className: \"reset\",\n    id: \"reset\",\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\u21BB\"));\n};\n\nvar Pomodoro =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pomodoro, _React$Component);\n\n  function Pomodoro(props) {\n    var _this;\n\n    _classCallCheck(this, Pomodoro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pomodoro).call(this, props));\n\n    _this.handleSetTimers = function (inc, type) {\n      if (inc && _this.state[type] === 60) return;\n      if (!inc && _this.state[type] === 1) return;\n\n      _this.setState(_defineProperty({}, type, _this.state[type] + (inc ? 1 : -1)));\n    };\n\n    _this.handlePlayPause = function () {\n      if (_this.state.active) {\n        _this.setState({\n          active: false\n        }, function () {\n          return clearInterval(_this.pomodoro);\n        });\n      } else {\n        if (!_this.state.touched) {\n          _this.setState({\n            time: _this.state.sessionValue * 60 * 1000,\n            active: true,\n            touched: true\n          }, function () {\n            return _this.pomodoro = setInterval(function () {\n              return _this.setState({\n                time: _this.state.time - 1000\n              });\n            }, 1000);\n          });\n        } else {\n          _this.setState({\n            active: true,\n            touched: true\n          }, function () {\n            return _this.pomodoro = setInterval(function () {\n              return _this.setState({\n                time: _this.state.time - 1000\n              });\n            }, 1000);\n          });\n        }\n      }\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        breakValue: 5,\n        sessionValue: 25,\n        time: 25 * 60 * 1000,\n        active: false,\n        mode: \"session\",\n        touched: false\n      });\n\n      _this.audio.pause();\n\n      _this.audio.currentTime = 0;\n      clearInterval(_this.pomodoro);\n    };\n\n    _this.state = {\n      breakValue: 5,\n      sessionValue: 25,\n      time: 25 * 60 * 1000,\n      active: false,\n      mode: \"session\",\n      touched: false\n    };\n    return _this;\n  }\n\n  _createClass(Pomodoro, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.state.time === 0 && this.state.mode === \"session\") {\n        this.setState({\n          time: this.state.breakValue * 60 * 1000,\n          mode: \"break\"\n        });\n        this.audio.play();\n      }\n\n      if (this.state.time === 0 && this.state.mode === \"break\") {\n        this.setState({\n          time: this.state.sessionValue * 60 * 1000,\n          mode: \"session\"\n        });\n        this.audio.play();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(SetTimer, {\n        type: \"break\",\n        label: \"Break Length\",\n        value: this.state.breakValue,\n        handleClick: this.handleSetTimers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(SetTimer, {\n        type: \"session\",\n        label: \"Session Length\",\n        value: this.state.sessionValue,\n        handleClick: this.handleSetTimers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(Timer, {\n        mode: this.state.mode,\n        time: moment(this.state.time).format(\"mm:ss\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Controls, {\n        active: this.state.active,\n        handleReset: this.handleReset,\n        handlePlayPause: this.handlePlayPause,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"audio\", {\n        id: \"beep\",\n        src: \"https://s3-us-west-1.amazonaws.com/benjaminadk/Data+synth+beep+high+and+sweet.mp3\",\n        ref: function ref(_ref4) {\n          return _this2.audio = _ref4;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Pomodoro;\n}(React.Component);\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/callumwallace/Desktop/Projects/React-Pomodoro-Clock/src/Pomodoro.js"],"names":["React","moment","require","format","SetTimer","type","label","value","handleClick","Timer","mode","time","Controls","active","handleReset","handlePlayPause","Pomodoro","props","handleSetTimers","inc","state","setState","clearInterval","pomodoro","touched","sessionValue","setInterval","breakValue","audio","pause","currentTime","prevProps","play","ref","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nvar moment = require(\"moment\");\nmoment().format();\n\nconst SetTimer = ({ type, label, value, handleClick }) => (\n  <div className=\"SetTimer\">\n    <div id={`${type}-label`}>{label}</div>\n    <div className=\"SetTimer-controls\">\n      <h1 id={`${type}-length`}>{value}</h1>\n      <button\n        className=\"increment\"\n        id={`${type}-increment`}\n        onClick={() => handleClick(true, `${type}Value`)}\n      >\n        +\n      </button>\n      <button\n        className=\"decrement\"\n        id={`${type}-decrement`}\n        onClick={() => handleClick(false, `${type}Value`)}\n      >\n        -\n      </button>\n    </div>\n  </div>\n);\n\nconst Timer = ({ mode, time }) => (\n  <div className=\"Timer\">\n    <h1 id=\"timer-label\">{mode === \"session\" ? \"Session \" : \"Break \"}</h1>\n    <h1 id=\"time-left\">{time}</h1>\n  </div>\n);\n\nconst Controls = ({ active, handleReset, handlePlayPause }) => (\n  <div className=\"Controls\">\n    <button className=\"startStop\" id=\"start_stop\" onClick={handlePlayPause}>\n      {active ? <span>&#10074;&#10074;</span> : <span>&#9658;</span>}\n    </button>\n    <button className=\"reset\" id=\"reset\" onClick={handleReset}>\n      &#8635;\n    </button>\n  </div>\n);\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakValue: 5,\n      sessionValue: 25,\n      time: 25 * 60 * 1000,\n      active: false,\n      mode: \"session\",\n      touched: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.time === 0 && this.state.mode === \"session\") {\n      this.setState({ time: this.state.breakValue * 60 * 1000, mode: \"break\" });\n      this.audio.play();\n    }\n    if (this.state.time === 0 && this.state.mode === \"break\") {\n      this.setState({\n        time: this.state.sessionValue * 60 * 1000,\n        mode: \"session\"\n      });\n      this.audio.play();\n    }\n  }\n\n  handleSetTimers = (inc, type) => {\n    if (inc && this.state[type] === 60) return;\n    if (!inc && this.state[type] === 1) return;\n    this.setState({ [type]: this.state[type] + (inc ? 1 : -1) });\n  };\n\n  handlePlayPause = () => {\n    if (this.state.active) {\n      this.setState({ active: false }, () => clearInterval(this.pomodoro));\n    } else {\n      if (!this.state.touched) {\n        this.setState(\n          {\n            time: this.state.sessionValue * 60 * 1000,\n            active: true,\n            touched: true\n          },\n          () =>\n            (this.pomodoro = setInterval(\n              () => this.setState({ time: this.state.time - 1000 }),\n              1000\n            ))\n        );\n      } else {\n        this.setState(\n          {\n            active: true,\n            touched: true\n          },\n          () =>\n            (this.pomodoro = setInterval(\n              () => this.setState({ time: this.state.time - 1000 }),\n              1000\n            ))\n        );\n      }\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      breakValue: 5,\n      sessionValue: 25,\n      time: 25 * 60 * 1000,\n      active: false,\n      mode: \"session\",\n      touched: false\n    });\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    clearInterval(this.pomodoro);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"settings\">\n          <SetTimer\n            type=\"break\"\n            label=\"Break Length\"\n            value={this.state.breakValue}\n            handleClick={this.handleSetTimers}\n          />\n          <SetTimer\n            type=\"session\"\n            label=\"Session Length\"\n            value={this.state.sessionValue}\n            handleClick={this.handleSetTimers}\n          />\n        </div>\n        <Timer\n          mode={this.state.mode}\n          time={moment(this.state.time).format(\"mm:ss\")}\n        />\n        <Controls\n          active={this.state.active}\n          handleReset={this.handleReset}\n          handlePlayPause={this.handlePlayPause}\n        />\n        <audio\n          id=\"beep\"\n          src=\"https://s3-us-west-1.amazonaws.com/benjaminadk/Data+synth+beep+high+and+sweet.mp3\"\n          ref={ref => (this.audio = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}