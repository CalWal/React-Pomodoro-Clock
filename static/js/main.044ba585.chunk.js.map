{"version":3,"sources":["Pomodoro.js","Header.js","index.js"],"names":["moment","require","format","SetTimer","_ref","type","label","value","handleClick","react_default","a","createElement","className","id","concat","onClick","Timer","_ref2","mode","time","Controls","_ref3","active","handleReset","handlePlayPause","Pomodoro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSetTimers","inc","state","setState","defineProperty","clearInterval","pomodoro","touched","setInterval","sessionValue","breakValue","audio","pause","currentTime","prevProps","play","_this2","Pomodoro_SetTimer","Pomodoro_Timer","Pomodoro_Controls","src","ref","React","Component","Header","rootElement","document","getElementById","ReactDOM","render","src_Header","src_Pomodoro"],"mappings":"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","file":"static/js/main.044ba585.chunk.js","sourcesContent":["import React from \"react\";\n\nvar moment = require(\"moment\");\nmoment().format();\n\nconst SetTimer = ({ type, label, value, handleClick }) => (\n  <div className=\"SetTimer\">\n    <div id={`${type}-label`}>{label}</div>\n    <div className=\"SetTimer-controls\">\n      <h1 id={`${type}-length`}>{value}</h1>\n      <button\n        className=\"increment\"\n        id={`${type}-increment`}\n        onClick={() => handleClick(true, `${type}Value`)}\n      >\n        +\n      </button>\n      <button\n        className=\"decrement\"\n        id={`${type}-decrement`}\n        onClick={() => handleClick(false, `${type}Value`)}\n      >\n        -\n      </button>\n    </div>\n  </div>\n);\n\nconst Timer = ({ mode, time }) => (\n  <div className=\"Timer\">\n    <h1 id=\"timer-label\">{mode === \"session\" ? \"Session \" : \"Break \"}</h1>\n    <h1 id=\"time-left\">{time}</h1>\n  </div>\n);\n\nconst Controls = ({ active, handleReset, handlePlayPause }) => (\n  <div className=\"Controls\">\n    <button id=\"start_stop\" onClick={handlePlayPause}>\n      {active ? <span>&#10074;&#10074;</span> : <span>&#9658;</span>}\n    </button>\n    <button id=\"reset\" onClick={handleReset}>\n      &#8635;\n    </button>\n  </div>\n);\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakValue: 5,\n      sessionValue: 25,\n      time: 25 * 60 * 1000,\n      active: false,\n      mode: \"session\",\n      touched: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.time === 0 && this.state.mode === \"session\") {\n      this.setState({ time: this.state.breakValue * 60 * 1000, mode: \"break\" });\n      this.audio.play();\n    }\n    if (this.state.time === 0 && this.state.mode === \"break\") {\n      this.setState({\n        time: this.state.sessionValue * 60 * 1000,\n        mode: \"session\"\n      });\n      this.audio.play();\n    }\n  }\n\n  handleSetTimers = (inc, type) => {\n    if (inc && this.state[type] === 60) return;\n    if (!inc && this.state[type] === 1) return;\n    this.setState({ [type]: this.state[type] + (inc ? 1 : -1) });\n  };\n\n  handlePlayPause = () => {\n    if (this.state.active) {\n      this.setState({ active: false }, () => clearInterval(this.pomodoro));\n    } else {\n      if (!this.state.touched) {\n        this.setState(\n          {\n            time: this.state.sessionValue * 60 * 1000,\n            active: true,\n            touched: true\n          },\n          () =>\n            (this.pomodoro = setInterval(\n              () => this.setState({ time: this.state.time - 1000 }),\n              1000\n            ))\n        );\n      } else {\n        this.setState(\n          {\n            active: true,\n            touched: true\n          },\n          () =>\n            (this.pomodoro = setInterval(\n              () => this.setState({ time: this.state.time - 1000 }),\n              1000\n            ))\n        );\n      }\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      breakValue: 5,\n      sessionValue: 25,\n      time: 25 * 60 * 1000,\n      active: false,\n      mode: \"session\",\n      touched: false\n    });\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    clearInterval(this.pomodoro);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"settings\">\n          <SetTimer\n            type=\"break\"\n            label=\"Break Length\"\n            value={this.state.breakValue}\n            handleClick={this.handleSetTimers}\n          />\n          <SetTimer\n            type=\"session\"\n            label=\"Session Length\"\n            value={this.state.sessionValue}\n            handleClick={this.handleSetTimers}\n          />\n        </div>\n        <Timer\n          mode={this.state.mode}\n          time={moment(this.state.time).format(\"mm:ss\")}\n        />\n        <Controls\n          active={this.state.active}\n          handleReset={this.handleReset}\n          handlePlayPause={this.handlePlayPause}\n        />\n        <audio\n          id=\"beep\"\n          src=\"https://s3-us-west-1.amazonaws.com/benjaminadk/Data+synth+beep+high+and+sweet.mp3\"\n          ref={ref => (this.audio = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Pomodoro;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Pomodoro Clock!</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport Pomodoro from \"./Pomodoro\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Pomodoro />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}